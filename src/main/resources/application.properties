# spring.datasource.url=jdbc:h2:mem:testdb
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=password
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.jpa.defer-datasource-initialization=true
# spring.h2.console.enabled=true
# spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# cors.allowed.origins=${CORS_ORIGINS:https://symphonious-monstera-982c83.netlify.app/}

# # Production database (H2 for simplicity, you can upgrade to PostgreSQL later)
# spring.datasource.url=jdbc:h2:mem:testdb
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=password

# # JPA Configuration
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.jpa.hibernate.ddl-auto=create-drop
# spring.jpa.show-sql=false

# # Server Configuration
# server.port=${PORT:8080}

# # CORS Configuration for production
# cors.allowed.origins=${CORS_ORIGINS:http://localhost:3001}







# spring.application.name=socials
# spring.datasource.driver-class-name = org.postgresql.Driver
# spring.datasource.url = jdbc:postgresql://localhost:5432/social_app_db
# spring.datasource.username = postgres
# spring.datasource.password = Sharan@06
# spring.jpa.hibernate.ddl-auto = update
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# spring.datasource.url=jdbc:h2:mem:testdb
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=password

# # JPA/Hibernate Configuration
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.jpa.hibernate.ddl-auto=create-drop
# spring.jpa.show-sql=true

# # H2 Console (for debugging - you can view your database at http://localhost:8080/h2-console)
# spring.h2.console.enabled=true

# # Server Configuration
# server.port=8080

# 23/08/25
# # PostgreSQL Configuration
# spring.datasource.url=${DATABASE_URL:jdbc:h2:mem:testdb}
# spring.datasource.driver-class-name=${DATABASE_DRIVER:org.h2.Driver}
# spring.datasource.username=${DATABASE_USERNAME:sa}
# spring.datasource.password=${DATABASE_PASSWORD:}

# # JPA Settings
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.database-platform=${DATABASE_DIALECT:org.hibernate.dialect.H2Dialect}
# spring.jpa.show-sql=false

# # H2 Console (only for local development)
# spring.h2.console.enabled=${H2_CONSOLE_ENABLED:true}

# # Server Port
# server.port=${PORT:8080}
# 

# new one
# Database Configuration (Environment-based)
# spring.datasource.url=${DATABASE_URL:jdbc:h2:mem:testdb}
# spring.datasource.driver-class-name=${DATABASE_DRIVER:org.h2.Driver}
# spring.datasource.username=${DATABASE_USERNAME:sa}
# spring.datasource.password=${DATABASE_PASSWORD:}

# # JPA Settings
# spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
# spring.jpa.database-platform=${DATABASE_DIALECT:org.hibernate.dialect.H2Dialect}
# spring.jpa.show-sql=${SHOW_SQL:false}

# # Enable SQL logging in development
# logging.level.org.hibernate.SQL=${SQL_LOG_LEVEL:WARN}
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${SQL_PARAM_LOG_LEVEL:WARN}

# # H2 Console (only for local development)
# spring.h2.console.enabled=${H2_CONSOLE_ENABLED:true}

# # Server Port
# server.port=${PORT:8080}

# # Connection Pool Settings (for production)
# spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:10}
# spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:2}


# newone

# FORCE PostgreSQL Configuration (bypassing environment variables)
spring.datasource.url=jdbc:postgresql://dpg-d2kr7p3e5dus7386l3u0-a.singapore-postgres.render.com:5432/socialfeed?user=socialfeed_user&password=ILPcbg4yXJHFVS0SvYkdgK5Hod1wNa4P&sslmode=require
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=socialfeed_user
spring.datasource.password=ILPcbg4yXJHFVS0SvYkdgK5Hod1wNa4P

# JPA Settings for PostgreSQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# Disable H2 console completely
spring.h2.console.enabled=false

# Server Port
server.port=${PORT:8080}

# Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2